# Home Assistant configuration.yaml
light:
- platform: mqtt
  name: "dualdimmer_SW1"
  state_topic: "dualdimmer/stat/POWER1"
  command_topic: "dualdimmer/cmnd/POWER1"
  availability_topic: "dualdimmer/tele/LWT"
  brightness_state_topic: "dualdimmer/stat/RESULT"
  brightness_command_topic: "dualdimmer/cmnd/Channel1"
  brightness_scale: 100
  brightness_value_template: >
    {% if value_json.Channel1 is defined %}
      {{ value_json.Channel1 }}
    {% else %}
      {% if state_attr('light.dualdimmer_SW1','brightness') == none %}
        0
      {% else %}
        {{ state_attr('light.dualdimmer_SW1','brightness') / 255 * 100 }}
      {% endif %}
    {% endif %}
  qos: 1
  payload_on: "ON"
  payload_off: "OFF"
  payload_available: "Online"
  payload_not_available: "Offline"
  retain: false
- platform: mqtt
  name: "dualdimmer_SW2"
  state_topic: "dualdimmer/stat/POWER2"
  command_topic: "dualdimmer/cmnd/POWER2"
  availability_topic: "dualdimmer/tele/LWT"
  brightness_state_topic: "dualdimmer/stat/RESULT"
  brightness_command_topic: "dualdimmer/cmnd/Channel2"
  brightness_scale: 100
  brightness_value_template: >
    {% if value_json.Channel2 is defined %}
      {{ value_json.Channel2 }}
    {% else %}
      {% if state_attr('light.dualdimmer_SW2','brightness') == none %}
        0
      {% else %}
        {{ state_attr('light.dualdimmer_SW2','brightness') / 255 * 100 }}
      {% endif %}
    {% endif %}
  qos: 1
  payload_on: "ON"
  payload_off: "OFF"
  payload_available: "Online"
  payload_not_available: "Offline"
  retain: false  
